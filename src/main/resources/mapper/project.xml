<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="projectsDAO">
 	<select id="count" resultType="int">
 		select count(*) from projects
 	</select>
 	
 	<select id="all" resultType="projectsdto">
		<![CDATA[
		   select * from 
		    (select rownum as rnum , a.* from 
		     (select * from projects order by project_no desc) a where rownum <= #{endNo})
		       where rnum >= #{startNo}
		]]>
	</select>
	
	<select id="board_project_list" resultType="projectsdto">
		select * from projects order by project_start desc
	</select>
	
	<select id="getMain" resultType="maindto">
		select * from main_project order by main_no
	</select>
	<select id="status" resultType="statusdto">
		select * from projects_status order by status_no
	</select>
	<insert id="insert" parameterType="projectsdto">
		<selectKey keyProperty="project_no" resultType="int" order="BEFORE">
			select max(project_no) from projects
	    </selectKey>
	    insert into projects values(#{project_no}+1,#{project_name},'',#{project_end},'','',#{project_taker},default,#{project_status},#{project_main},'','','','','')
	</insert>
	<select id="cont" parameterType="int" resultType="projectsdto">
		select * from projects where project_no=#{num}
  	</select>
  	<select id="allMem" resultType="memberDTO">
  		select * from member order by dept_no
  	</select>
  	<update id="updateMember1" parameterType="projectsdto">
  		update projects set project_taker = #{project_taker} where project_no=#{project_no}
  	</update>
  	<update id="updateMember2" parameterType="projectsdto">
  		update projects set project_taker2 = #{project_taker2} where project_no=#{project_no}
  	</update>
  	<update id="updateMember3" parameterType="projectsdto">
  		update projects set project_taker3 = #{project_taker3} where project_no=#{project_no}
  	</update>
  	<update id="updateMember4" parameterType="projectsdto">
  		update projects set project_taker4 = #{project_taker4} where project_no=#{project_no}
  	</update>
  	<update id="updateMember5" parameterType="projectsdto">
  		update projects set project_taker5 = #{project_taker5} where project_no=#{project_no}
  	</update>
  	<delete id="deleteProject" parameterType="int">
  		delete from projects where project_no = #{num}
  	</delete>
  	<update id="move" parameterType="projectsdto">
  		update projects set project_status = #{project_status} where project_no=#{project_no}
  	</update>
  	<update id="start" parameterType="projectsdto">
  		update projects set project_start = #{project_start} where project_no=#{project_no}
  	</update>
  	<update id="end" parameterType="projectsdto">
  		update projects set project_end = #{project_end} where project_no=#{project_no}
  	</update>
  	<update id="comment" parameterType="projectsdto">
  		update projects set project_comment = #{project_comment} where project_no=#{project_no}
  	</update>
	<update id="deletetaker1" parameterType="projectsdto">
		update projects set project_taker = '' where project_no=#{project_no}
	</update>
	<update id="deletetaker2" parameterType="projectsdto">
		update projects set project_taker2 = '' where project_no=#{project_no}
	</update>
	<update id="deletetaker3" parameterType="projectsdto">
		update projects set project_taker3 = '' where project_no=#{project_no}
	</update>
	<update id="deletetaker4" parameterType="projectsdto">
		update projects set project_taker4 = '' where project_no=#{project_no}
	</update>
	<update id="deletetaker5" parameterType="projectsdto">
		update projects set project_taker5 = '' where project_no=#{project_no}
	</update>
	<insert id="insertStatus" parameterType="statusdto">
		<selectKey keyProperty="status_no" resultType="int" order="BEFORE">
			select max(status_no) from projects_status
	    </selectKey>
	    insert into projects_status values(#{status_no}+1,#{status_name})
	</insert>
	<select id="select_status_no" parameterType="statusdto" resultType="int">
		select status_no from projects_status where status_name = #{status_name}
	</select>
	<update id="update_status" parameterType="projectsdto">
		update projects set project_status=#{project_status} where project_no=#{project_no}
	</update>
	<insert id="board_insertProject" parameterType="projectsdto">
		<selectKey keyProperty="project_no" resultType="int" order="BEFORE">
			select max(project_no) from projects
	    </selectKey>
	    insert into projects values(#{project_no}+1,#{project_name},'','','','','',default,#{project_status},#{project_main},'','','','','')
	</insert>
	<select id="selectproject" resultType="projectsdto">
		<![CDATA[
		   select * from 
		    (select rownum as rnum , a.* from 
		     (select * from projects where project_name like '%' || #{keyword} || '%'  order by project_no desc) a where rownum <= #{endNo})
		       where rnum >= #{startNo}
		]]>
	</select>
	<select id="selectname" resultType="projectsdto">
		<![CDATA[
		   select * from 
		    (select rownum as rnum , a.* from 
		     (select * from projects where project_taker like '%' || #{keyword} || '%'
		     	or project_taker2 like '%' || #{keyword} || '%'
		     	or project_taker3 like '%' || #{keyword} || '%'
		     	or project_taker4 like '%' || #{keyword} || '%'
		     	or project_taker5 like '%' || #{keyword} || '%'
		       order by project_no desc) a where rownum <= #{endNo})
		        where rnum >= #{startNo}
		]]>
	</select>
	<select id="countByName" resultType="int">
		select count(*) from projects where project_taker like '%' || #{keyword} || '%'
		  or project_taker2 like '%' || #{keyword} || '%'
     	  or project_taker3 like '%' || #{keyword} || '%'
     	  or project_taker4 like '%' || #{keyword} || '%'
     	  or project_taker5 like '%' || #{keyword} || '%'
	</select>
	<select id="countByProject" resultType="int">
		select count(*) from projects where project_name like '%' || #{keyword} || '%'
	</select>
	<select id="countByStatus" resultType="int">
		select count(*) from projects where project_status = #{status_no}
	</select>
	<select id="selectStatus" resultType="projectsdto" parameterType="pagedto">
		<![CDATA[
		   select * from 
		    (select rownum as rnum , a.* from 
		     (select * from projects where project_status=#{status_no} order by project_no desc) a where rownum <= #{endNo})
		       where rnum >= #{startNo}
		]]>
	</select>
 </mapper>